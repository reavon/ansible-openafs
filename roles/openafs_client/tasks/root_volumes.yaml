---
- debug:
    msg: creating root volumes

# Get admin token
# TODO: become_method to get a token?
- copy:
    # TODO: how to get keytab src path? move this to the client role?
    src: keytabs/afs01.example.com/var/kerberos/keytabs/admin.admin.keytab
    dest: admin.admin.keytab
- command: "{{ kinit }} -k -t admin.admin.keytab admin/admin@{{ openafs_realm }}"
- command: "{{ aklog }} -d -c {{ openafs_cell }}"

# Create the afs root volume.
- name: Create afs root volume
  command: "{{ vos }} create -server {{ server }} -partition {{ part }} -name root.afs -verbose"
  register: vos_result
  changed_when: vos_result.rc == 0
  failed_when: >
    vos_result.rc != 0
    and 'Volume root.afs already exists' not in vos_result.get('stderr','')

- command: "{{ fs }} setacl /afs/.:mount/{{ openafs_cell }}:root.afs/. system:anyuser read"

# Create the cell root volume.
- name: Create cell root volume
  command: "{{ vos }} create -server {{ server }} -partition {{ part }} -name root.cell -verbose"
  register: vos_result
  changed_when: vos_result.rc == 0
  failed_when: >
    vos_result.rc != 0
    and 'Volume root.cell already exists' not in vos_result.get('stderr','')

- command: "{{ fs }} setacl /afs/.:mount/{{ openafs_cell }}:root.cell/. system:anyuser read"

- command: "{{ fs }} mkmount /afs/.:mount/{{ openafs_cell }}:root.afs/{{ openafs_cell }} root.cell {{ openafs_cell }}"
  register: fs_result
  changed_when: fs_result.rc == 0
  failed_when: >
    fs_result.rc != 0
    and 'File exists' not in fs_result.get('stderr','')

# Replicate the cell root volume.
- command: "{{ vos }} addsite -server {{ server }} -part {{ part }} -id root.cell"
  register: vos_result
  changed_when: vos_result.rc == 0
  failed_when: >
    vos_result.rc != 0
    and 'RO already exists on partition' not in vos_result.get('stderr','')

- command: "{{ vos }} release root.cell -verbose"

- command: "{{ fs }} mkmount /afs/.:mount/{{ openafs_cell }}:root.afs/.{{ openafs_cell }} root.cell {{ openafs_cell }} -rw"
  register: fs_result
  changed_when: fs_result.rc == 0
  failed_when: >
    fs_result.rc != 0
    and 'File exists' not in fs_result.get('stderr','')

- command: "{{ fs }} checkvolumes"

# Replicate the afs root volume.
- command: "{{ vos }} addsite -server {{ server }} -part {{ part }} -id root.afs"
  register: vos_result
  changed_when: vos_result.rc == 0
  failed_when: >
    vos_result.rc != 0
    and 'RO already exists on partition' not in vos_result.get('stderr','')

- command: "{{ vos }} release root.afs -verbose"

