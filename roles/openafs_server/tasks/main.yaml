---

#----------------------------------------
# TODO: selinux labels and firewall rules
- name: disable selinux
  selinux:
    state: disabled
- name: disable firewall
  systemd:
    name: firewalld
    enabled: no
    state: stopped
#----------------------------------------

- name: vice partitions
  include: vice-partition.yaml
  with_items: "{{ vicep.split(',') }}"
  when: vicep is defined

- name: add epel yum repo
  yum:
    name: epel-release
    state: present
    update_cache: yes

- name: add openafs yum repo
  yum:
    name: "{{ openafs_yum_repo }}"
    state: present
    update_cache: yes

- name: install openafs servers
  yum:
    state: present
    name:
      - openafs-server

- name: configure cell
  template:
    src: "{{ item }}.j2"
    dest: "{{ openafs_path.afsconfdir }}/{{ item }}"
    mode: 0644
  with_items:
    - CellServDB
    - ThisCell
    - UserList

- name: set service keys
  include: setkey-rxkad-krb5.yaml

- file:
    state: directory
    path: "{{ openafs_path.afslocaldir }}"
    mode: 0700
    owner: root
    group: root

- name: configure server
  template:
    src: "{{ item }}.j2"
    dest: "{{ openafs_path.afslocaldir }}/{{ item }}"
    mode: 0644
    owner: root
    group: root
  with_items:
    - BosConfig.new
    - NetInfo

# TODO: BosConfig.new is wiped on bosserver start, triggering false 'changed' on
#       subsequent runs.
# TODO: Restart servers on bosconfig change.

- name: start openafs servers
  service:
    state: started
    name: openafs-server

- name: Ensure root volume exists
  run_once: true
  command: >
    vos create
      -server {{ groups['openafs_fileservers'][0] }}
      -partition {{ hostvars[groups['openafs_fileservers'][0]]['vicep'][0] }}
      -name root.afs
      -verbose
      -localauth
  register: vos_result
  until: >
    vos_result.rc == 0 or
    'Volume root.afs already exists' in vos_result.stderr
  delay: 30
  retries: 10
  ignore_errors: true
  changed_when: vos_result.rc == 0

- name: Ensure root volume exists
  run_once: true
  fail:
    msg: Unable to create root.afs volume.
  when: >
    vos_result.rc != 0
    and not 'Volume root.afs already exists' in vos_result.stderr

- name: Ensure admin user exists
  run_once: true
  command: pts createuser -name {{ openafs_admin }} -localauth
  register: pts_result
  ignore_errors: true
  changed_when: pts_result.rc == 0

- name: Ensure admin user exists
  run_once: true
  fail:
    msg: Unable to create admin user
  when: >
    pts_result.rc != 0
    and not 'Entry for name already exists' in pts_result.stderr

- name: Add admin user to system:administrators group
  run_once: true
  command: pts adduser {{ openafs_admin }} system:administrators -localauth
  register: pts_result
  ignore_errors: true
  changed_when: pts_result.rc == 0

- run_once: true
  fail:
    msg: Unable to create admin user
  when: >
    pts_result.rc != 0
    and not 'Entry for id already exists' in pts_result.stderr
